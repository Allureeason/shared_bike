// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bike.proto

#include "bike.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace bike {
constexpr mobile_code_request::mobile_code_request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mobile_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct mobile_code_requestDefaultTypeInternal {
  constexpr mobile_code_requestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~mobile_code_requestDefaultTypeInternal() {}
  union {
    mobile_code_request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT mobile_code_requestDefaultTypeInternal _mobile_code_request_default_instance_;
constexpr mobile_code_response::mobile_code_response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(0u)
  , icode_(0u){}
struct mobile_code_responseDefaultTypeInternal {
  constexpr mobile_code_responseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~mobile_code_responseDefaultTypeInternal() {}
  union {
    mobile_code_response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT mobile_code_responseDefaultTypeInternal _mobile_code_response_default_instance_;
}  // namespace bike
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bike_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_bike_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bike_2eproto = nullptr;

const uint32_t TableStruct_bike_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::bike::mobile_code_request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bike::mobile_code_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bike::mobile_code_request, mobile_),
  0,
  PROTOBUF_FIELD_OFFSET(::bike::mobile_code_response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bike::mobile_code_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bike::mobile_code_response, code_),
  PROTOBUF_FIELD_OFFSET(::bike::mobile_code_response, icode_),
  PROTOBUF_FIELD_OFFSET(::bike::mobile_code_response, desc_),
  1,
  2,
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, -1, sizeof(::bike::mobile_code_request)},
  { 8, 17, -1, sizeof(::bike::mobile_code_response)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bike::_mobile_code_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bike::_mobile_code_response_default_instance_),
};

const char descriptor_table_protodef_bike_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nbike.proto\022\004bike\"%\n\023mobile_code_reques"
  "t\022\016\n\006mobile\030\001 \002(\t\"A\n\024mobile_code_respons"
  "e\022\014\n\004code\030\001 \002(\r\022\r\n\005icode\030\002 \002(\r\022\014\n\004desc\030\003"
  " \001(\t"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bike_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bike_2eproto = {
  false, false, 124, descriptor_table_protodef_bike_2eproto, "bike.proto", 
  &descriptor_table_bike_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_bike_2eproto::offsets,
  file_level_metadata_bike_2eproto, file_level_enum_descriptors_bike_2eproto, file_level_service_descriptors_bike_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_bike_2eproto_getter() {
  return &descriptor_table_bike_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_bike_2eproto(&descriptor_table_bike_2eproto);
namespace bike {

// ===================================================================

class mobile_code_request::_Internal {
 public:
  using HasBits = decltype(std::declval<mobile_code_request>()._has_bits_);
  static void set_has_mobile(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

mobile_code_request::mobile_code_request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bike.mobile_code_request)
}
mobile_code_request::mobile_code_request(const mobile_code_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mobile_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    mobile_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_mobile()) {
    mobile_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mobile(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:bike.mobile_code_request)
}

inline void mobile_code_request::SharedCtor() {
mobile_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  mobile_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

mobile_code_request::~mobile_code_request() {
  // @@protoc_insertion_point(destructor:bike.mobile_code_request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void mobile_code_request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  mobile_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void mobile_code_request::ArenaDtor(void* object) {
  mobile_code_request* _this = reinterpret_cast< mobile_code_request* >(object);
  (void)_this;
}
void mobile_code_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void mobile_code_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void mobile_code_request::Clear() {
// @@protoc_insertion_point(message_clear_start:bike.mobile_code_request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    mobile_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* mobile_code_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required string mobile = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_mobile();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bike.mobile_code_request.mobile");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* mobile_code_request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bike.mobile_code_request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_mobile().data(), static_cast<int>(this->_internal_mobile().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bike.mobile_code_request.mobile");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mobile(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bike.mobile_code_request)
  return target;
}

size_t mobile_code_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bike.mobile_code_request)
  size_t total_size = 0;

  // required string mobile = 1;
  if (_internal_has_mobile()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mobile());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData mobile_code_request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    mobile_code_request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*mobile_code_request::GetClassData() const { return &_class_data_; }

void mobile_code_request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<mobile_code_request *>(to)->MergeFrom(
      static_cast<const mobile_code_request &>(from));
}


void mobile_code_request::MergeFrom(const mobile_code_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bike.mobile_code_request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_mobile()) {
    _internal_set_mobile(from._internal_mobile());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void mobile_code_request::CopyFrom(const mobile_code_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bike.mobile_code_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mobile_code_request::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void mobile_code_request::InternalSwap(mobile_code_request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &mobile_, lhs_arena,
      &other->mobile_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata mobile_code_request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_bike_2eproto_getter, &descriptor_table_bike_2eproto_once,
      file_level_metadata_bike_2eproto[0]);
}

// ===================================================================

class mobile_code_response::_Internal {
 public:
  using HasBits = decltype(std::declval<mobile_code_response>()._has_bits_);
  static void set_has_code(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_icode(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000006) ^ 0x00000006) != 0;
  }
};

mobile_code_response::mobile_code_response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bike.mobile_code_response)
}
mobile_code_response::mobile_code_response(const mobile_code_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    desc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_desc()) {
    desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_desc(), 
      GetArenaForAllocation());
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&icode_) -
    reinterpret_cast<char*>(&code_)) + sizeof(icode_));
  // @@protoc_insertion_point(copy_constructor:bike.mobile_code_response)
}

inline void mobile_code_response::SharedCtor() {
desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  desc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&icode_) -
    reinterpret_cast<char*>(&code_)) + sizeof(icode_));
}

mobile_code_response::~mobile_code_response() {
  // @@protoc_insertion_point(destructor:bike.mobile_code_response)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void mobile_code_response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void mobile_code_response::ArenaDtor(void* object) {
  mobile_code_response* _this = reinterpret_cast< mobile_code_response* >(object);
  (void)_this;
}
void mobile_code_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void mobile_code_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void mobile_code_response::Clear() {
// @@protoc_insertion_point(message_clear_start:bike.mobile_code_response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    desc_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&icode_) -
        reinterpret_cast<char*>(&code_)) + sizeof(icode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* mobile_code_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required uint32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_code(&has_bits);
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required uint32 icode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_icode(&has_bits);
          icode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string desc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bike.mobile_code_response.desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* mobile_code_response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bike.mobile_code_response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_code(), target);
  }

  // required uint32 icode = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_icode(), target);
  }

  // optional string desc = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_desc().data(), static_cast<int>(this->_internal_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bike.mobile_code_response.desc");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_desc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bike.mobile_code_response)
  return target;
}

size_t mobile_code_response::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bike.mobile_code_response)
  size_t total_size = 0;

  if (_internal_has_code()) {
    // required uint32 code = 1;
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_code());
  }

  if (_internal_has_icode()) {
    // required uint32 icode = 2;
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_icode());
  }

  return total_size;
}
size_t mobile_code_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bike.mobile_code_response)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 code = 1;
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_code());

    // required uint32 icode = 2;
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_icode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string desc = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_desc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData mobile_code_response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    mobile_code_response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*mobile_code_response::GetClassData() const { return &_class_data_; }

void mobile_code_response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<mobile_code_response *>(to)->MergeFrom(
      static_cast<const mobile_code_response &>(from));
}


void mobile_code_response::MergeFrom(const mobile_code_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bike.mobile_code_response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    if (cached_has_bits & 0x00000004u) {
      icode_ = from.icode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void mobile_code_response::CopyFrom(const mobile_code_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bike.mobile_code_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mobile_code_response::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void mobile_code_response::InternalSwap(mobile_code_response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &desc_, lhs_arena,
      &other->desc_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(mobile_code_response, icode_)
      + sizeof(mobile_code_response::icode_)
      - PROTOBUF_FIELD_OFFSET(mobile_code_response, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata mobile_code_response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_bike_2eproto_getter, &descriptor_table_bike_2eproto_once,
      file_level_metadata_bike_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace bike
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bike::mobile_code_request* Arena::CreateMaybeMessage< ::bike::mobile_code_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bike::mobile_code_request >(arena);
}
template<> PROTOBUF_NOINLINE ::bike::mobile_code_response* Arena::CreateMaybeMessage< ::bike::mobile_code_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bike::mobile_code_response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
